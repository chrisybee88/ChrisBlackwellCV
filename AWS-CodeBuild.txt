1) Create a new angular website

2) create an S3 bucket with web hosting and versioning and upload angular build output
S3 lab A Cloud Guru: https://learn.acloud.guru/handson/832301d1-2af5-42c6-9114-d2e171297f3d

3) create github, push code and create a CICD build, dont forget the build on changes checkbox, add push and PR 
https://medium.com/geekculture/angular-application-deployment-with-github-aws-ci-cd-codebuild-s3-the-step-by-step-guide-8893777104da
https://docs.aws.amazon.com/codebuild/latest/userguide/sample-github-pull-request.html
Primary source webhook events
Rebuild every time a code change is pushed to this repository
Push + PullRequestMerged

RoleName:
codebuild-ChrisBlackwellCV-CICD-service-role

my-awsome-bucket-of-files/

4) Create a cloud front, dontforget to set index.html as default root object, and disable web access to S3 bucket
OAI: access-identity-chrisblackwell-ngcv.s3.eu-west-2.amazonaws.com

CloudFront lab A Cloud Guru: https://learn.acloud.guru/handson/12688e2d-f139-44a9-87bb-f26c27d281bb
https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-https-requests-s3/
Default root object - optional
index.html

arn:aws:cloudfront::372345663074:distribution/E1AFZXO59MKYFW
Distribution domain name: 
https://dl1e48tn65e2p.cloudfront.net

5) Create a CNAME record to point to the cloud front, 
first we need a domain name in Route53, 
then create an alias record to point the cloudfron URL to the CNAME record
https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html
https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html
https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html#alternate-domain-names-requirements

